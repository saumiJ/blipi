{"version":3,"sources":["src/ts/helpers.ts","src/ts/hindi.ts"],"names":[],"mappings":"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","file":"hindi.ae0463f5.js","sourceRoot":"..","sourcesContent":["export const getElementByIdAssured = (_document: Document, _id: string): HTMLElement => {\n    const element = _document.getElementById(_id);\n    if (element == null)\n        throw TypeError(\"element is null\");\n    return element;\n};\n\nexport type CellData = [string, string];\nexport type RowData = Array<CellData>;\n\nexport const emptyCell: CellData = [\"-\", \"-\"];","import { getElementByIdAssured, RowData, emptyCell } from \"./helpers\";\n\nconst showTable = (table: HTMLTableElement, rowsText: Array<RowData>, IDLabel: string) => {\n    for (const [rowNumber, rowText] of rowsText.entries()) {\n        const row: HTMLTableRowElement = table.insertRow();\n        row.id = `table-${IDLabel}-row-${rowNumber}`;\n        for (const [primaryText, secondaryText] of rowText) {\n            const cell: HTMLTableCellElement = row.insertCell();\n            cell.classList.add(\"table-letters-cell\");\n            if (primaryText == \"-\" && secondaryText == \"-\") {\n                cell.classList.add(\"emptyCell\");\n            }\n\n            const vowel: HTMLElement = cell.appendChild(document.createElement(\"p\"));\n\n            const primaryLetter: HTMLSpanElement = <HTMLSpanElement>(vowel.appendChild(document.createElement(\"span\")));\n            primaryLetter.classList.add(\"letter-primary\");\n            primaryLetter.classList.add(\"show-primary\");\n            primaryLetter.textContent = primaryText;\n\n            const secondaryLetter: HTMLSpanElement = <HTMLSpanElement>(vowel.appendChild(document.createElement(\"span\")));\n            secondaryLetter.classList.add(\"letter-secondary\");\n            primaryLetter.classList.add(\"show-secondary\");\n            secondaryLetter.textContent = secondaryText;\n        }\n    }\n};\n\nconst tableVowels: HTMLTableElement = <HTMLTableElement>(getElementByIdAssured(document, \"table-vowels\"));\nconst vowelRowsText: Array<RowData> = [\n    [[\"अ\", \"a\"], [\"आ\", \"ā\"], [\"इ\", \"i\"], [\"ई\", \"ī\"], [\"उ\", \"u\"], [\"ऊ\", \"ū\"]],\n    [[\"ए\", \"ē\"], [\"ऐ\", \"ai\"], [\"ओ\", \"ō\"], [\"औ\", \"au\"], [\"अं\", \"ṁ\"], [\"अः\", \"ḥ\"]]\n];\nshowTable(tableVowels, vowelRowsText, \"vowels\");\n\nconst tableConsonants: HTMLTableElement = <HTMLTableElement>(getElementByIdAssured(document, \"table-consonants\"));\nconst consonantRowsText: Array<RowData> = [\n    [[\"क्\", \"k\"], [\"ख्\", \"kh\"], [\"ग्\", \"g\"], [\"घ्\", \"gh\"], [\"ङ्\", \"ṅ\"], emptyCell, emptyCell, [\"ह्\", \"h\"]],\n    [[\"च्\", \"c\"], [\"छ्\", \"ch\"], [\"ज्\", \"j\"], [\"झ्\", \"jh\"], [\"ञ्\", \"ñ\"], [\"य्\", \"y\"], [\"श्\", \"ś\"], emptyCell],\n    [[\"ट्\", \"ṭ\"], [\"ठ्\", \"ṭh\"], [\"ड्\", \"ḍ\"], [\"ढ्\", \"ḍh\"], [\"ण्\", \"ṇ\"], [\"र्\", \"r\"], [\"ष्\", \"ṣ\"], emptyCell],\n    [[\"त्\", \"t\"], [\"थ्\", \"th\"], [\"द्\", \"d\"], [\"ध्\", \"dh\"], [\"न्\", \"n\"], [\"ल्\", \"l\"], [\"स्\", \"s\"], emptyCell],\n    [[\"प्\", \"t\"], [\"फ्\", \"ph\"], [\"ब्\", \"b\"], [\"भ्\", \"bh\"], [\"म्\", \"m\"], [\"व्\", \"v\"], emptyCell, emptyCell],\n];\nshowTable(tableConsonants, consonantRowsText, \"consonants\");"]}